<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
    <groupId>com.fengdis</groupId>
    <artifactId>fdadmin</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0</version>

	<modules>
		<module>fdadmin-admin</module>
		<module>fdadmin-core</module>
		<module>fdadmin-data</module>
		<module>fdadmin-common</module>
		<module>fdadmin-tools</module>
	</modules>

    <name>fdadmin</name>
	<url>http://www.fengdis.com</url>
    <description>管理系统</description>

	<!--<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
	</parent>-->
    
    <properties>
	    <fengdis.version>1.0.0</fengdis.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<shiro.version>1.4.1</shiro.version>
		<thymeleaf.extras.shiro.version>2.0.0</thymeleaf.extras.shiro.version>
		<mybatis.boot.version>1.3.2</mybatis.boot.version>
		<druid.version>1.1.14</druid.version>
		<bitwalker.version>1.19</bitwalker.version>
		<kaptcha.version>2.3.2</kaptcha.version>
		<swagger.version>2.9.2</swagger.version>
		<pagehelper.boot.version>1.2.5</pagehelper.boot.version>
		<fastjson.version>1.2.60</fastjson.version>
		<oshi.version>3.9.1</oshi.version>
		<commons.beanutils.version>1.9.3</commons.beanutils.version>
		<commons.io.version>2.5</commons.io.version>
		<commons.fileupload.version>1.3.3</commons.fileupload.version>
		<jsoup.version>1.11.3</jsoup.version>
		<velocity.version>1.7</velocity.version>
	</properties>
	
    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>
        
            <!-- SpringBoot的依赖配置-->
			<!-- 就可以获取spring-boot-dependencies.2.0.0.RELEASE.pom文件中dependencyManagement配置的jar包依赖。如果要继承多个，可以在dependencyManagement中添加 -->
			<!-- <scope>import</scope>解决单继承问题，类似parent标签 -->
			<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!--阿里数据库连接池 -->
			<dependency>
	            <groupId>com.alibaba</groupId>
	            <artifactId>druid-spring-boot-starter</artifactId>
	            <version>${druid.version}</version>
	        </dependency>
	        
	        <!-- 验证码 -->
			<dependency>
				<groupId>com.github.penggle</groupId>
				<artifactId>kaptcha</artifactId>
				<version>${kaptcha.version}</version>
			</dependency>
			
			<!-- Shiro核心框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			
			<!-- Shiro使用Srping框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			
			<!-- Shiro使用EhCache缓存框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
	
			<!-- thymeleaf模板引擎和shiro框架的整合 -->
			<dependency>
				<groupId>com.github.theborakompanioni</groupId>
				<artifactId>thymeleaf-extras-shiro</artifactId>
				<version>${thymeleaf.extras.shiro.version}</version>
			</dependency>
	
			<!-- 解析客户端操作系统、浏览器等 -->
			<dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${bitwalker.version}</version>
			</dependency>
			
			<!-- pagehelper 分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper.boot.version}</version>
			</dependency>
			
			<!-- 获取系统信息 -->
			<dependency>
				<groupId>com.github.oshi</groupId>
				<artifactId>oshi-core</artifactId>
				<version>${oshi.version}</version>
			</dependency>
			
			<!-- swagger2-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
				<exclusions>
				    <exclusion>
				        <groupId>io.swagger</groupId>
				        <artifactId>swagger-annotations</artifactId>
				    </exclusion>
				    <exclusion>
				        <groupId>io.swagger</groupId>
				        <artifactId>swagger-models</artifactId>
				    </exclusion>
				</exclusions>
			</dependency>
			
			<!-- swagger2-UI-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>

			<!-- bean通用 -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
			</dependency>
            
            <!--io常用工具类 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
	
			<!--文件上传工具类 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
			</dependency>
			
			<!-- Java的HTML解析器 -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			
			<!--velocity代码生成使用模板 -->
	        <dependency>
	            <groupId>org.apache.velocity</groupId>
	            <artifactId>velocity</artifactId>
	            <version>${velocity.version}</version>
	        </dependency>

	        <!-- 阿里JSON解析器 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
            
			<!-- 核心模块-->
			<dependency>
				<groupId>com.fengdis</groupId>
				<artifactId>fdadmin-core</artifactId>
				<version>${fengdis.version}</version>
			</dependency>
			
	        <!-- 系统模块-->
			<dependency>
				<groupId>com.fengdis</groupId>
				<artifactId>fdadmin-data</artifactId>
				<version>${fengdis.version}</version>
			</dependency>
			
			<!-- 通用工具-->
	        <dependency>
	            <groupId>com.fengdis</groupId>
	            <artifactId>fdadmin-common</artifactId>
	            <version>${fengdis.version}</version>
	        </dependency>

			<dependency>
				<groupId>com.fengdis</groupId>
				<artifactId>fdadmin-tools</artifactId>
				<version>${fengdis.version}</version>
			</dependency>

			<!--===========================================-->

			<!--druid连接池-->
			<!--<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.1.5</version>
            </dependency>-->

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.9.0</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.9.10.8</version>
			</dependency>

			<!--guava工具集-->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>20.0</version>
			</dependency>

			<!-- swagger2 start -->
			<!--<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.2.2</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.2.2</version>
			</dependency>-->
			<!-- swagger2 end -->

			<!--RocketMQ-->
			<dependency>
				<groupId>org.apache.rocketmq</groupId>
				<artifactId>rocketmq-client</artifactId>
				<version>4.4.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.rocketmq</groupId>
				<artifactId>rocketmq-common</artifactId>
				<version>4.4.0</version>
			</dependency>

			<!--zookeeper-->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
				<version>3.4.10</version>
			</dependency>

			<!-- mybatis-plus begin -->
			<!--<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>1.0.5</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>2.1.8</version>
            </dependency>-->
			<!-- mybatis-plus end -->

			<!--annotation工具lombok-->
			<!--<dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
            </dependency>-->

			<!--===========以下在spring-boot-dependencies中有相应依赖============-->

			<!--<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.5</version>
			</dependency>-->

			<!--<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.9</version>
			</dependency>-->

			<!-- java工具包 -->
			<!--<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>-->

			<!-- dom4j 解析xml -->
			<!--<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>-->

			<!--Java对象和Json之间的互转，一般用的比较多的两个类库是Jackson和Gson-->
			<!--<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.7</version>
			</dependency>-->

			<!-- Redis-Jedis客户端 -->
			<!--<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>2.9.0</version>
			</dependency>-->

			<!--spring2.0集成redis所需common-pool2，必须加上，jedis依赖此-->
			<!--<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>2.5.0</version>
			</dependency>-->

			<!--elasticsearch-->
			<!--<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>6.4.0</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>transport</artifactId>
				<version>6.4.0</version>
			</dependency>-->

			<!--TransportClient将会在Elasticsearch 7.0弃用并在8.0中完成删除，建议使用Java High Level REST Client-->
			<!--<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>6.4.0</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-client</artifactId>
				<version>6.4.0</version>
			</dependency>-->

			<!--6.x之后是使用更高效的netty4做异步通信的-->
			<!--<dependency>
				<groupId>org.elasticsearch.plugin</groupId>
				<artifactId>transport-netty4-client</artifactId>
				<version>6.4.0</version>
			</dependency>-->

			<!-- lucene 核心模块 (elasticsearch依赖) -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>7.4.0</version>
			</dependency>

			<!-- Lucene提供的中文分词器模块，lucene-analyzers-smartcn:Lucene  的中文分词器 SmartChineseAnalyzer -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers-smartcn</artifactId>
				<version>7.4.0</version>
			</dependency>

			<!-- ikanalyzer 中文分词器 -->
			<dependency>
				<groupId>com.janeluo</groupId>
				<artifactId>ikanalyzer</artifactId>
				<version>2012_u6</version>
				<!--排除掉里面旧的lucene包，因为我们要重写里面的分析器和分词器  -->
				<exclusions>
					<exclusion>
						<groupId>org.apache.lucene</groupId>
						<artifactId>lucene-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.lucene</groupId>
						<artifactId>lucene-queryparser</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.lucene</groupId>
						<artifactId>lucene-analyzers-common</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- HBase -->
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-client</artifactId>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
				</exclusions>
				<version>2.0.0</version>
			</dependency>

			<!--JWT验证和授权服务-->
			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>3.2.0</version>
			</dependency>

			<!--POI提供API给Java程序对Microsoft Office格式档案读和写的功能-->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.17</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.17</version>
			</dependency>

			<!-- 文件压缩 -->
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant</artifactId>
				<version>1.9.7</version>
			</dependency>

			<!--反射框架-->
			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>0.9.10</version>
			</dependency>

			<!--模板语言beetl-->
			<dependency>
				<groupId>com.ibeetl</groupId>
				<artifactId>beetl</artifactId>
				<version>2.7.19</version>
			</dependency>

			<!-- 易源SDK -->
			<!--<dependency>
                <groupId>com.show</groupId>
                <artifactId>showapi_sdk</artifactId>
                <version>1.0</version>
            </dependency>-->

			<!-- 七牛云服务SDK -->
			<dependency>
				<groupId>com.qiniu</groupId>
				<artifactId>qiniu-java-sdk</artifactId>
				<version>[7.2.0, 7.2.99]</version>
			</dependency>

			<!-- 阿里云短信服务SDK -->
			<dependency>
				<groupId>com.aliyun</groupId>
				<artifactId>aliyun-java-sdk-core</artifactId>
				<version>4.0.3</version>
			</dependency>

			<!-- 增加sql解析所需的正则依赖 -->
			<!--<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-runtime</artifactId>
				<version>3.5</version>
			</dependency>-->

			<!-- ssh远程 -->
			<dependency>
				<groupId>ch.ethz.ganymed</groupId>
				<artifactId>ganymed-ssh2</artifactId>
				<version>build210</version>
			</dependency>

			<!--java工具包-->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version><!--4.6.7-->[4.1.12,)</version>
			</dependency>

			<!--中文转换成拼音-->
			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>2.5.0</version>
			</dependency>

			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>2.1.5</version>
			</dependency>

			<dependency>
				<groupId>com.aliyun.oss</groupId>
				<artifactId>aliyun-sdk-oss</artifactId>
				<version>2.5.0</version>
			</dependency>
			<dependency>
				<groupId>com.qcloud</groupId>
				<artifactId>cos_api</artifactId>
				<version>5.5.9</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 微信SDK -->
			<dependency>
				<groupId>com.github.binarywang</groupId>
				<artifactId>weixin-java-mp</artifactId>
				<version>3.5.0</version>
			</dependency>

			<!--<dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-hadoop-boot</artifactId>
                <version>2.5.0.RELEASE</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-hadoop</artifactId>
                <version>2.5.0.RELEASE</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>-->
	        
        </dependencies>
    </dependencyManagement>

	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/libs-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>

		<pluginRepository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/libs-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<build>

		<resources>
			<!--打包时将resources文件夹下的所有文件打包进来-->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>

			<!-- 如果mapper.xml是放在src/main/java目录下，需配置以下-->
			<!--<resource>
                <directory>src/main/java</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/mapper/*.xml</include>
                </includes>
            </resource>-->
		</resources>

		<finalName>fengdis</finalName>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- maven install跳过test -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests>
						<!-- skip 对应命令行参数为 maven.test.skip -->
						<skip>false</skip>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

</project>